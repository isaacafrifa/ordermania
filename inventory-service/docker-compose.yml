version: '3.8'
services:
  
  # MySQL DB
  inventory_db:
    image: mysql
    container_name: inventory_mysql
    ports:
      - 3306:3306
    # Network for inventory
    networks:
      - inventory_network
    environment:
      - MYSQL_DATABASE=<db-name>
      - MYSQL_USER=<username> # don't use root as username, learnt it the hard wayðŸ˜« exceptions ðŸ˜«
      - MYSQL_PASSWORD=<password>
      - MYSQL_ROOT_PASSWORD=<root-password>
    # Where our data will be persisted  
    volumes:
      - ordermania_db_volume:/var/lib/mysql

  # APP BACKEND
  api_service:
    # Configuration for building the docker image for the backend service
    build:
      context: . # Use an image built from the specified dockerfile in the directory.
      dockerfile: Dockerfile
    container_name: inventory_service_app
    ports:
      - 8080:8080 # mapping local machine port along with port inside a docker container.
    restart: always # Always restart the container if it stops
    environment: # Pass environment variables to the service
      - SPRING_DATASOURCE_URL=jdbc:mysql://inventory_mysql:3306/inventory_db # overwriting datasource_url in properties file
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://host.docker.internal:8761/eureka # overwriting eureka serviceUrl cos eurekaServer isn't localhost anymore
      - SPRING_RABBITMQ_HOST=rabbitmq_service # overwriting RabbitMQ's default host cos localhost isnt valid here
      - SPRING_RABBITMQ_USERNAME=<username> #overwriting rabbit's creds
      - SPRING_RABBITMQ_PASSWORD=<password>
    depends_on:
      - inventory_db  # This service depends on mysql. Start that first.
      - rabbitmq_service # this service is created in Eureka's docker compose
    # Network for inventory
    networks:
      - inventory_network

# Names our volume
volumes:
  ordermania_db_volume:

# Names our network
networks:
  inventory_network:
    external: true
    name: ordermania_network # ordermania_network is the common network created in the Eureka server's docker-compose.
