version: '3.8'
services:
  
  # MySQL DB
  product_db:
    image: mysql
    container_name: product_mysql
    environment:
      - MYSQL_DATABASE=<db-name>
      - MYSQL_USER=<username> # don't use root as username, learnt it the hard wayðŸ˜« exceptions ðŸ˜«
      - MYSQL_PASSWORD=<password>
      - MYSQL_ROOT_PASSWORD=<root-password>
      - MYSQL_TCP_PORT=3307 # run MySQL image on different port other than the default 3306
    ports:
      - 3307:3307
    networks:
      - product_network  
    # Where our data will be persisted  
    volumes:
      - product_db_volume:/var/lib/mysql
      
  # APP BACKEND
  api_service:
    # Configuration for building the docker image for the backend service
    build: 
      context: . # Use an image built from the specified dockerfile in the directory.
      dockerfile: Dockerfile
    container_name: product_service_app
    ports:
      - 8081:8081 # mapping local machine port along with port inside a docker container.
    restart: always # Always restart the container if it stops
    environment: # Pass environment variables to the service
      - SPRING_DATASOURCE_URL=jdbc:mysql://product_mysql:3307/<db-name> # overwriting datasource_url in properties file 
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://host.docker.internal:8761/eureka # overwriting eureka serviceUrl cos eurekaServer isn't localhost anymore
    depends_on:
      - product_db  # This service depends on mysql. Start that first.
    networks:
      - product_network
      

# Names our volume
volumes:
  product_db_volume:

networks:
  product_network:
    external: true
    name: ordermania_network # ordermania_network is the common network created in the Eureka server's docker-compose.
